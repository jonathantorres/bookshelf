# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp  # Set up stack pointer
    call main           # Execute main program
    halt                # Terminate program 

# Array of 4 elements
    .align 8
array:
    .quad 0x000d000d000d
    .quad 0x00c000c000c0
    .quad 0x0b000b000b00
    .quad 0xa000a000a000

main:
    irmovq array,%rdi
    irmovq $4,%rsi
    call rsum
    ret

# long rsum(long *start, long count)
# start in %rdi, count in %rsi
rsum:
    andq %rsi, %rsi
    jle base
    pushq %rbx
    mrmovq (%rdi), %rbx
    irmovq $1, %r8
    irmovq $8, %r9
    subq %r8, %rsi
    addq %r9, %rdi
    call rsum
    addq %rbx, %rax
    popq %rbx
    ret
base:
    irmovq $0, %rax
    ret

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
